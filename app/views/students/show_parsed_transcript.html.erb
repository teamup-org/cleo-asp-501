<!-- filepath: /Users/alyantharani/Desktop/Academics/CSCE-431/cleo-asp-501/app/views/students/show_parsed_transcript.html.erb -->
<div class="container-fluid mt-4">
  <% if flash[:alert] || flash[:notice] || flash[:success] %>
    <div class="flash-messages mb-4">
      <% flash.each do |type, message| %>
        <% next if message.blank? %>
        <div class="alert alert-<%= type == 'alert' ? 'danger' : (type == 'notice' ? 'info' : 'success') %> alert-dismissible fade show" role="alert">
          <%= message %>
          <% if type == 'alert' && flash[:error_details].present? %>
            <div class="mt-2 small">
              <strong>Error details:</strong>
              <div class="mt-1"><%= flash[:error_details].html_safe %></div>
            </div>
          <% end %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      <% end %>
    </div>
    <% flash.clear %>
  <% end %>

  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mb-0">View/Edit Transcript</h1>
    <div>
      <%= link_to profile_student_path(current_student_login), class: "btn btn-outline-secondary me-2" do %>
        <i class="fas fa-arrow-left me-2"></i> Back to Profile
      <% end %>
      <%= link_to "Upload New Transcript", upload_transcript_student_path(current_student_login), class: "btn btn-primary" %>
    </div>
  </div>

  <!-- Add/Edit Class Modal -->
  <div class="modal fade" id="courseModal" tabindex="-1" aria-labelledby="courseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="courseModalLabel">Add/Edit Course</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <%= form_tag add_transcript_course_student_path(current_student_login), method: :post, class: 'course-form', id: 'courseForm', data: { turbo: false } do %>
          <div class="modal-body">
            <input type="hidden" name="semester" id="modalSemester">
            <input type="hidden" name="edit_mode" id="modalEditMode" value="false">
            <input type="hidden" name="original_semester" id="originalSemester">
            
            <div class="mb-3">
              <label for="semester_select" class="form-label">Semester</label>
              <select class="form-select" id="semester_select" name="semester_select">
                <option value="Unknown Semester">Unknown Semester</option>
                <%# Semester options will be populated dynamically via JavaScript %>
              </select>
            </div>
            
            <div class="mb-3">
              <label for="ccode" class="form-label">Course Code (e.g., CSCE)</label>
              <input type="text" class="form-control" id="ccode" name="ccode" required pattern="[A-Z]{2,4}">
            </div>
            
            <div class="mb-3">
              <label for="cnumber" class="form-label">Course Number (e.g., 431)</label>
              <input type="text" class="form-control" id="cnumber" name="cnumber" required pattern="\d{3}[A-Z]?">
            </div>
            
            <div class="mb-3">
              <label for="cname" class="form-label">Course Name</label>
              <input type="text" class="form-control" id="cname" name="cname">
            </div>
            
            <div class="mb-3">
              <label for="credit_hours" class="form-label">Credit Hours</label>
              <input type="number" class="form-control" id="credit_hours" name="credit_hours" min="0" max="12" step="1" value="3">
            </div>
            
            <div class="mb-3">
              <label for="grade" class="form-label">Grade</label>
              <input type="text" class="form-control" id="grade" name="grade" 
                     pattern="[A-Z][+-]?|TR|CR|P|NP|W|I|IP|S|U"
                     placeholder="A, B+, C, etc.">
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Save Course</button>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <!-- Upload Success Modal -->
  <div class="modal fade" id="uploadSuccessModal" tabindex="-1" aria-labelledby="uploadSuccessModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="uploadSuccessModalLabel">Upload Successful</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="text-center">
            <i class="fas fa-check-circle text-success mb-3" style="font-size: 3rem;"></i>
            <p class="mb-0">Your transcript has been successfully uploaded and parsed.</p>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Continue</button>
        </div>
      </div>
    </div>
  </div>

  <% if @grouped_courses.present? && !@grouped_courses.empty? %>
    <div class="card mb-4">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Transcript Courses</h5>
      </div>
      <div class="card-body">
        <% if @grouped_courses.any? %>
          <% @grouped_courses.each do |semester, courses| %>
            <div class="mb-4">
              <div class="d-flex justify-content-between align-items-center mb-3">
                <h6 class="mb-0"><%= semester %></h6>
                <button type="button" class="btn btn-sm btn-success add-class-btn" data-semester="<%= semester %>">
                  <i class="fas fa-plus me-1"></i> Add Class
                </button>
              </div>
              <div class="table-responsive">
                <table class="table table-striped">
                  <thead>
                    <tr>
                      <th>Course Code</th>
                      <th>Course Number</th>
                      <th>Course Name</th>
                      <th>Credit Hours</th>
                      <th>Grade</th>
                      <th>Actions</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% courses.each do |course| %>
                      <tr>
                        <td><%= course['ccode'] %></td>
                        <td><%= course['cnumber'] %></td>
                        <td><%= course['cname'] %></td>
                        <td><%= course['credit_hours'] %></td>
                        <td><%= course['grade'] %></td>
                        <td class="text-end">
                          <div class="btn-group btn-group-sm">
                            <button type="button" class="btn btn-outline-primary edit-course-btn"
                              data-semester="<%= semester %>"
                              data-ccode="<%= course['ccode'] %>"
                              data-cnumber="<%= course['cnumber'] %>"
                              data-cname="<%= course['cname'] %>"
                              data-credit-hours="<%= course['credit_hours'] %>"
                              data-grade="<%= course['grade'] %>">
                              <i class="fas fa-edit"></i>
                            </button>
                            <%= button_to remove_transcript_course_student_path(current_student_login, 
                                  course_id: course['course_id'],
                                  semester: semester),
                                  method: :delete,
                                  class: 'btn btn-outline-danger delete-course-btn',
                                  form: { data: { turbo: false } },
                                  data: { confirm: 'Are you sure you want to remove this course?' } do %>
                              <i class="fas fa-trash"></i>
                            <% end %>
                          </div>
                        </td>
                      </tr>
                    <% end %>
                  </tbody>
                </table>
              </div>
            </div>
          <% end %>
        <% else %>
          <div class="alert alert-info">
            No courses found in the transcript.
          </div>
        <% end %>
      </div>
    </div>
  <% else %>
    <div class="card mb-4">
      <div class="card-header">
        <h5 class="mb-0">Upload Transcript</h5>
      </div>
      <div class="card-body">
        <div class="alert alert-info">
          <p>No courses found in your transcript history. Please upload a transcript or add courses manually.</p>
          <% if @parse_error %>
            <p class="text-danger"><strong>Error details:</strong> <%= @parse_error %></p>
          <% end %>
        </div>

        <%= form_tag upload_transcript_student_path(current_student_login), method: :post, multipart: true, class: 'transcript-form' do %>
          <div class="mb-3">
            <label for="transcript" class="form-label">Upload Transcript (PDF only)</label>
            <input type="file" class="form-control" id="transcript" name="transcript" accept=".pdf" required>
            <div class="form-text">Please upload a PDF file of your transcript.</div>
          </div>
          <div class="d-flex justify-content-between">
            <%= link_to 'Back to Profile', profile_student_path(current_student_login), class: "btn btn-secondary" %>
            <button type="submit" class="btn btn-primary">Upload and Parse Transcript</button>
          </div>
        <% end %>
      </div>
    </div>
  <% end %>
</div>

<% content_for :head do %>
  <%= stylesheet_link_tag 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css' %>
  <%= stylesheet_link_tag 'https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' %>
  <%= javascript_include_tag 'https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js' %>
  <style>
    .transcript-form .card {
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      margin-bottom: 1rem;
    }
    .transcript-form .card-header {
      background-color: #f8f9fa;
      padding: 0.75rem 1rem;
    }
    .transcript-form .card-header h3 {
      font-size: 1.1rem;
      margin: 0;
    }
    .transcript-form .table {
      margin-bottom: 0;
      font-size: 0.9rem;
    }
    .transcript-form .table th,
    .transcript-form .table td {
      vertical-align: middle;
      padding: 0.5rem;
    }
    .sticky-footer {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background: rgba(255, 255, 255, 0.95);
      border-top: 1px solid #dee2e6;
      box-shadow: 0 -1px 4px rgba(0,0,0,0.1);
      z-index: 1000;
      backdrop-filter: blur(8px);
    }
    .table-responsive {
      max-height: calc(100vh - 200px);
      overflow-y: auto;
      margin-bottom: 3rem;
    }
    .add-class-btn {
      white-space: nowrap;
      padding: 0.25rem 0.5rem;
      font-size: 0.875rem;
    }
    .gap-2 {
      gap: 0.5rem;
    }
    .modal-content {
      border-radius: 0.5rem;
    }
    .modal-header {
      background-color: #f8f9fa;
      border-bottom: 1px solid #dee2e6;
    }
    .modal-footer {
      background-color: #f8f9fa;
      border-top: 1px solid #dee2e6;
    }
    .form-control {
      border-radius: 0.25rem;
    }
    .btn-group-sm > .btn {
      padding: 0.25rem 0.5rem;
    }
    .btn-group-sm > .btn i {
      font-size: 0.875rem;
    }
    .me-1 {
      margin-right: 0.25rem;
    }
    .me-2 {
      margin-right: 0.5rem;
    }
    .alert {
      margin-bottom: 1rem;
      border: none;
      border-radius: 0.5rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .alert-success {
      background-color: #d1e7dd;
      color: #0f5132;
    }
    .alert-danger {
      background-color: #f8d7da;
      color: #842029;
    }
    .alert-info {
      background-color: #cff4fc;
      color: #055160;
    }
    .btn-close {
      opacity: 0.5;
    }
    .btn-close:hover {
      opacity: 0.75;
    }
  </style>
<% end %>

<% content_for :javascript do %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Function to generate semester options
      function generateSemesterOptions(enrollmentYear, graduationYear) {
        const semesterSelect = document.getElementById('semester_select');
        const semesters = ['Spring', 'Summer', 'Fall'];
        
        // Keep the "Unknown Semester" option
        while (semesterSelect.options.length > 1) {
          semesterSelect.remove(1);
        }
        
        // Generate semesters from enrollment year to graduation year
        for (let year = enrollmentYear; year <= graduationYear; year++) {
          semesters.forEach(semester => {
            // Skip Summer semester for the graduation year
            if (year === graduationYear && semester === 'Summer') {
              return;
            }
            const option = document.createElement('option');
            option.value = `${semester} ${year}`;
            option.textContent = `${semester} ${year}`;
            semesterSelect.appendChild(option);
          });
        }
      }

      // Get student's enrollment and graduation years from the page
      const enrollmentYear = <%= @student.enrol_year || 2021 %>;
      const graduationYear = <%= @student.grad_year || 2025 %>;
      
      // Generate semester options
      generateSemesterOptions(enrollmentYear, graduationYear);

      // Auto-dismiss flash messages after 5 seconds
      setTimeout(function() {
        document.querySelectorAll('.alert').forEach(function(alert) {
          const closeButton = alert.querySelector('.btn-close');
          if (closeButton) {
            closeButton.click();
          }
        });
      }, 5000);

      // Handle delete buttons
      document.querySelectorAll('.delete-course-btn').forEach(button => {
        button.addEventListener('click', function(e) {
          if (!confirm(this.dataset.confirm)) {
            e.preventDefault();
          }
        });
      });

      // Add Class button handlers
      document.querySelectorAll('.add-class-btn').forEach(button => {
        button.addEventListener('click', function() {
          const semester = this.dataset.semester;
          document.getElementById('modalSemester').value = semester;
          document.getElementById('originalSemester').value = semester;
          document.getElementById('semester_select').value = semester;
          document.getElementById('modalEditMode').value = 'false';
          document.getElementById('courseModalLabel').textContent = 'Add New Course';
          
          // Clear form fields
          document.getElementById('ccode').value = '';
          document.getElementById('cnumber').value = '';
          document.getElementById('cname').value = '';
          document.getElementById('credit_hours').value = '3';
          document.getElementById('grade').value = '';
          
          const courseModal = new bootstrap.Modal(document.getElementById('courseModal'));
          courseModal.show();
        });
      });

      // Edit course button handlers
      document.querySelectorAll('.edit-course-btn').forEach(button => {
        button.addEventListener('click', function() {
          const semester = this.dataset.semester;
          const ccode = this.dataset.ccode;
          const cnumber = this.dataset.cnumber;
          const cname = this.dataset.cname;
          const creditHours = this.dataset.creditHours;
          const grade = this.dataset.grade;
          
          document.getElementById('modalSemester').value = semester;
          document.getElementById('originalSemester').value = semester;
          document.getElementById('semester_select').value = semester;
          document.getElementById('modalEditMode').value = 'true';
          document.getElementById('courseModalLabel').textContent = 'Edit Course';
          
          document.getElementById('ccode').value = ccode;
          document.getElementById('cnumber').value = cnumber;
          document.getElementById('cname').value = cname;
          document.getElementById('credit_hours').value = creditHours;
          document.getElementById('grade').value = grade;
          
          const courseModal = new bootstrap.Modal(document.getElementById('courseModal'));
          courseModal.show();
        });
      });

      // Update semester when dropdown changes
      document.getElementById('semester_select').addEventListener('change', function() {
        document.getElementById('modalSemester').value = this.value;
      });

      // Form validation
      const courseForm = document.getElementById('courseForm');
      if (courseForm) {
        courseForm.addEventListener('submit', function(e) {
          const ccode = document.getElementById('ccode').value.trim();
          const cnumber = document.getElementById('cnumber').value.trim();
          const creditHours = parseFloat(document.getElementById('credit_hours').value);
          
          if (!/^[A-Z]{2,4}$/.test(ccode)) {
            e.preventDefault();
            alert('Please enter a valid course code (2-4 uppercase letters)');
            return;
          }
          
          if (!/^\d{3}[A-Z]?$/.test(cnumber)) {
            e.preventDefault();
            alert('Please enter a valid course number (3 digits, optional letter)');
            return;
          }
          
          if (isNaN(creditHours) || creditHours < 0 || creditHours > 12) {
            e.preventDefault();
            alert('Please enter valid credit hours (0-12)');
            return;
          }
        });
      }

      <% if @show_success_modal %>
        const successModal = new bootstrap.Modal(document.getElementById('uploadSuccessModal'));
        successModal.show();
      <% end %>
    });
  </script>
<% end %>
